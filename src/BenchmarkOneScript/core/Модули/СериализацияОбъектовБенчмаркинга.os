Перем _СериализуемыеТипы; // Неопределено, Соответствие

#Область ПрограммныйИнтерфейс

// Подготавливает значение для безопасной сериализации или вывода.
//
// Параметры:
//   Значение - Произвольный - Любое значение для обработки
//
// Возвращаемое значение:
//   Произвольный - Обработанное значение по правилам:
//       1. Для сериализуемых типов (число, строка, булево и др.) - исходное значение
//       2. Для несериализуемых типов:
//          а) Если строковое представление совпадает с именем типа - "Тип@ХешКод"
//          б) Иначе - обычное строковое представление
Функция ПодготовитьЗначение(Значение) Экспорт

	Если ЗначениеСериализуется(Значение) Тогда
		Возврат Значение;
	КонецЕсли;

	Представление = Строка(Значение);
	Тип = ТипЗнч(Значение);
	Если Представление = Строка(Тип) Тогда
		Представление = СтрШаблон("%1@%2", Тип, Новый РасширениеОбъекта(Значение).ХешКод);
	КонецЕсли;
		
	Возврат Представление;

КонецФункции

// Проверяет, относится ли значение к сериализуемым типам данных
//
// Параметры:
//   Значение - Произвольный - Проверяемое значение
//
// Возвращаемое значение:
//   Булево
Функция ЗначениеСериализуется(Значение) Экспорт
	Возврат СериализуемыеТипы()[ТипЗнч(Значение)] = Истина;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СериализуемыеТипы()

	Если Не _СериализуемыеТипы = Неопределено Тогда
		Возврат _СериализуемыеТипы;
	КонецЕсли;

	_СериализуемыеТипы = Новый Соответствие();
	_СериализуемыеТипы.Вставить(Тип("Число"), Истина);
	_СериализуемыеТипы.Вставить(Тип("Строка"), Истина);
	_СериализуемыеТипы.Вставить(Тип("Булево"), Истина);
	_СериализуемыеТипы.Вставить(Тип("Дата"), Истина);
	_СериализуемыеТипы.Вставить(Тип("Неопределено"), Истина);
	_СериализуемыеТипы.Вставить(Тип("Null"), Истина);

	Возврат _СериализуемыеТипы;

КонецФункции

#КонецОбласти