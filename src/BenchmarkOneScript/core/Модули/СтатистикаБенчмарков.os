Функция СтатистикаЗамеров(Замеры) Экспорт

	КоличествоИтераций = Замеры.Количество();
	МиллисекундВСекунде = 1000;
	НаносекундВМиллисекунде = 1000000;
	НаносекундВСекунде = НаносекундВМиллисекунде * МиллисекундВСекунде;

	Наносекунд = УпорядоченныйМассив(
		ВыгрузитьЗамеры(Замеры, "НаносекундЗаОперацию", ЭтапыБенчмарка.Результат));

	ВыделяемаяПамять = УпорядоченныйМассив(
		ВыгрузитьЗамеры(Замеры, "ВыделяемаяПамятьЗаОперацию", ЭтапыБенчмарка.Память));

	Результат = Новый Структура();
	Результат.Вставить("Среднее", МатематическиеФункцииБенчмарков.Среднее(Наносекунд));
	Результат.Вставить("СтандартноеОтклонение", МатематическиеФункцииБенчмарков.СтандартноеОтклонение(Наносекунд));
	Результат.Вставить("СтандартнаяОшибкаСреднего", МатематическиеФункцииБенчмарков.СтандартнаяОшибкаСреднего(Результат.СтандартноеОтклонение, КоличествоИтераций));
	Результат.Вставить("Медиана", МатематическиеФункцииБенчмарков.Квартили(Наносекунд).Медиана);
	Результат.Вставить("ОперацийВСекунду", ?(Результат.Среднее = 0, 0, НаносекундВСекунде / Результат.Среднее));
	Результат.Вставить("ВыделяемаяПамять", МатематическиеФункцииБенчмарков.Среднее(ВыделяемаяПамять));

	Возврат Результат;

КонецФункции

Функция ВыгрузитьЗамеры(Замеры, ИмяКолонки, Этап) Экспорт

	Значения = Новый Массив();

	Для Каждого Строка Из Замеры Цикл
		Если Строка.Этап = Этап Тогда
			Значения.Добавить(Строка[ИмяКолонки]);
		КонецЕсли;
	КонецЦикла;

	Возврат Значения;
	
КонецФункции

Функция УпорядоченныйМассив(Массив)

	Результат = Новый СписокЗначений();
	Результат.ЗагрузитьЗначения(Массив);
	Результат.СортироватьПоЗначению();

	Возврат Результат.ВыгрузитьЗначения();

КонецФункции