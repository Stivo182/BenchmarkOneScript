#Использовать asserts

Перем _ИсточникБенчмарков; // Произвольный
Перем _ОбъектБенчмарков; // Экземпляр класса с бенчмарками
Перем _ДескрипторыБенчмарков; // КоллекцияДескрипторовБенчмарков

// Обертка источника бенчмарков
//
// Параметры:
//   ИсточникБенчмарков - Тип - Класс, содержащий бенчмарки
//                      - КоллекцияДескрипторовБенчмарков
//                      - ДескрипторБенчмарка
//                      - Произвольный - Экземпляр класса с бенчмарками
Процедура ПриСозданииОбъекта(ИсточникБенчмарков)
	_ИсточникБенчмарков = ИсточникБенчмарков;
КонецПроцедуры

Функция ОбъектБенчмарков() Экспорт

	Если Не _ОбъектБенчмарков = Неопределено Тогда
		Возврат _ОбъектБенчмарков;
	КонецЕсли;

	Если ТипЗнч(_ИсточникБенчмарков) = Тип("Тип") Тогда

		_ОбъектБенчмарков = Новый(_ИсточникБенчмарков);

	ИначеЕсли ТипЗнч(_ИсточникБенчмарков) = Тип("КоллекцияДескрипторовБенчмарков") Тогда

		Дескриптор = _ИсточникБенчмарков.ПолучитьПервый();
		Если Не Дескриптор = Неопределено Тогда
			_ОбъектБенчмарков = Новый(Дескриптор.ТипОбъекта());
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(_ИсточникБенчмарков) = Тип("ДескрипторБенчмарка") Тогда

		_ОбъектБенчмарков = Новый(_ИсточникБенчмарков.ТипОбъекта());

	Иначе

		_ОбъектБенчмарков = _ИсточникБенчмарков;

	КонецЕсли;

	Возврат _ОбъектБенчмарков;

КонецФункции

Функция Дескрипторы() Экспорт

	Если Не _ДескрипторыБенчмарков = Неопределено Тогда
		Возврат _ДескрипторыБенчмарков;
	КонецЕсли;

	Если ТипЗнч(_ИсточникБенчмарков) = Тип("КоллекцияДескрипторовБенчмарков") Тогда
		_ДескрипторыБенчмарков = _ИсточникБенчмарков;	
	ИначеЕсли ТипЗнч(_ИсточникБенчмарков) = Тип("ДескрипторБенчмарка") Тогда
		_ДескрипторыБенчмарков = Новый КоллекцияДескрипторовБенчмарков();
		_ДескрипторыБенчмарков.Добавить(_ИсточникБенчмарков);
	Иначе
		_ДескрипторыБенчмарков = Новый КоллекцияДескрипторовБенчмарков(ОбъектБенчмарков());
	КонецЕсли;

	Возврат _ДескрипторыБенчмарков;

КонецФункции