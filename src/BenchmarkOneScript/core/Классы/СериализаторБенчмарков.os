#Использовать logos
#Использовать jason

Перем _Лог; // Лог

// Сериализатор конфигурации бенчмарков
Процедура ПриСозданииОбъекта()
	_Лог = Логирование.ПолучитьЛог("oscript.lib.benchmark.СериализаторБенчмарков");
КонецПроцедуры

#Область ПрограммныйИнтерфейс

// Сериализует конфигурацию бенчмарков в JSON-файл
//
// Параметры:
//   Дескрипторы - КоллекцияДескрипторовБенчмарков - Коллекция дескрипторов бенчмарков
//   Конфигурация - КонфигурацияБенчмарков - Конфигурация бенчмарков
//   ИмяФайла - Строка - Имя файла, в который будет записана конфигурация
Процедура ЗаписатьВJson(Конфигурация, ИмяФайла) Экспорт

	_Лог.Отладка("Начало формирования файла: %1", ИмяФайла);
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, Символы.Таб);

	Сериализатор = Новый СериализаторJson();

	Конфигурация.ОбработатьПередСериализацией();

	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.ОткрытьФайл(ИмяФайла, "UTF-8", , ПараметрыЗаписиJSON);
	ЗаписьJSON.ЗаписатьБезОбработки(Сериализатор.Сериализовать(Конфигурация));
	ЗаписьJSON.Закрыть();

	_Лог.Отладка("Завершение формирования файла: %1", ИмяФайла);

КонецПроцедуры

// Десериализует конфигурацию бенчмарков из JSON-файла
//
// Параметры:
//   ИмяФайла - Строка - Имя файла, из которого будет прочитана конфигурация.
//
// Возвращаемое значение:
//   КонфигурацияБенчмарков
Функция ПрочитатьИзJson(ИмяФайла) Экспорт
		
	_Лог.Отладка("Начало чтения файла: %1", ИмяФайла);

	ЧтениеТекста = Новый ЧтениеТекста(ИмяФайла, "UTF-8");
	Строка = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	Десериализатор = Новый ДесериализаторJson();
	Конфигурация = Десериализатор.Десериализовать(Строка, Тип("КонфигурацияБенчмарков"));
	Конфигурация.ОбработатьПослеДесериализации();
		
	_Лог.Отладка("Завершение чтения файла: %1", ИмяФайла);

	Возврат Конфигурация;

КонецФункции

#КонецОбласти