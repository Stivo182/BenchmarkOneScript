#Использовать delegate
#Использовать fluent

// Создает экземпляр колонки
//
// Возвращаемое значение:
//   КолонкаОтчетаБенчмарков
Функция Создать() Экспорт
	
	Колонка = Новый КолонкаОтчетаБенчмарков(КолонкиОтчетаБенчмарков.КоэффициентОтношенияСреднего);
	Колонка.Заголовок = "Ratio";
	Колонка.Описание = "Среднее коэффициентов отношений ([Mean] / [Baseline Mean])";
	Колонка.СтильКоэффициента = СтилиКоэффициентаБенчмарка.Значение;
	Колонка.ЗначениеДелегат = Делегаты.Создать(ЭтотОбъект, "Значение");

	Возврат Колонка;

КонецФункции

// Возвращает значение колонки
//
// Параметры:
//   СтрокаРезультата - СтрокаТаблицыЗначений - см. ЗапускательБенчмарков.НоваяТаблицаРезультатовЗапусков
//   Колонка - КолонкаОтчетаБенчмарков
//
// Возвращаемое значение:
//   Произвольный
Функция Значение(СтрокаРезультата, Колонка) Экспорт // BSLLS:UnusedParameters-off
	
	Если СтрокаРезультата.ДескрипторБенчмарка.ЭтоЭталон() Тогда
		Возврат 1;
	КонецЕсли;

	Если СтрокаРезультата.Эталон = Неопределено Тогда
		Возврат "?";
	КонецЕсли;

	Замеры = ВыгрузитьЗамеры(СтрокаРезультата.Замеры);
	ЗамерыЭталона = ВыгрузитьЗамеры(СтрокаРезультата.Эталон.Замеры);

	Сумма = 0;
	Количество = Замеры.Количество() * ЗамерыЭталона.Количество();
	
	Для Каждого НаносекундЗаОперацию Из Замеры Цикл
		Для Каждого НаносекундЗаОперациюЭталона Из ЗамерыЭталона Цикл
			Если Не НаносекундЗаОперациюЭталона = 0 Тогда
				Сумма = Сумма + НаносекундЗаОперацию / НаносекундЗаОперациюЭталона;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Коэффициент = Сумма / Количество;

	Если Коэффициент = 0 Тогда
		Коэффициент = 1;
	КонецЕсли;

	Возврат Коэффициент;

КонецФункции

Функция ВыгрузитьЗамеры(Замеры)

	Возврат ПроцессорыКоллекций.ИзКоллекции(Замеры)
		.Фильтровать("Элемент -> Элемент.Этап = Этап", Новый Структура("Этап", ЭтапыБенчмарка.Измерение))
		.Получить(Тип("ТаблицаЗначений"))
		.ВыгрузитьКолонку("НаносекундЗаОперацию");

КонецФункции