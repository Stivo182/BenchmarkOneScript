&ИсточникПараметров("ПолучитьМножители")
Перем Множитель Экспорт;

&МониторингПамяти
Процедура ПриСозданииОбъекта()
КонецПроцедуры

&Бенчмарк
&ИсточникПараметров("ПолучитьПараметрыБнечмарка")
Процедура БенчмаркФакториала(Число, ТипАлгоритма) Экспорт

	Если ТипАлгоритма = "Итеративный" Тогда
		Результат = ФакториалИтеративный(Число) * Множитель;
	ИначеЕсли ТипАлгоритма = "Рекурсивный" Тогда
		Результат = ФакториалРекурсивный(Число) * Множитель;
	КонецЕсли;

КонецПроцедуры

// Итеративный алгоритм вычисления факториала
Функция ФакториалИтеративный(Число)
	Результат = 1;
	Для Сч = 1 По Число Цикл
		Результат = Результат * Сч;
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Рекурсивный алгоритм вычисления факториала
Функция ФакториалРекурсивный(Число)
	Если Число <= 1 Тогда
		Возврат 1;
	КонецЕсли;
	Возврат Число * ФакториалРекурсивный(Число - 1);
КонецФункции

// Метод, возвращающий коллекцию множителей
Функция ПолучитьМножители() Экспорт
	Множители = Новый Массив();
	Множители.Добавить(1);
	Множители.Добавить(100);
	Возврат Множители;
КонецФункции

// Метод, возвращающий наборы параметров для бенчмарка
Функция ПолучитьПараметрыБнечмарка() Экспорт

	Наборы = Новый ТаблицаЗначений();
	Наборы.Колонки.Добавить("Число");
	Наборы.Колонки.Добавить("ТипАлгоритма");
	
	// Набор 1: Маленькое число, итеративный алгоритм
	Набор = Наборы.Добавить();
	Набор.Число = 10;
	Набор.ТипАлгоритма = "Итеративный";
	
	// Набор 2: Среднее число, рекурсивный алгоритм
	Набор = Наборы.Добавить();
	Набор.Число = 15;
	Набор.ТипАлгоритма = "Рекурсивный";
	
	// Набор 3: Большое число, итеративный алгоритм
	Набор = Наборы.Добавить();
	Набор.Число = 20;
	Набор.ТипАлгоритма = "Итеративный";
	
	Возврат Наборы;

КонецФункции