// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off

#Использовать asserts
#Использовать fluent
#Использовать "helpers"

&Тест
Процедура Тест_ПараметрыМетодаИзАннотаций() Экспорт
	
	Конфигурация = ТестированиеБенчмарков.КонфигурацияПоУмолчанию();
	Результат = Бенчмаркинг.Запустить(Тип("БенчмаркСПараметрамиМетода"), Конфигурация);
	НаборыПараметров = Результат.ДескрипторыБенчмарков[0].НаборыПараметров();

	Ожидаем.Что(Результат.Отчет.Таблица).Заполнено();
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам1")]).Равно(10);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам2")]).Равно(100);
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам1")]).Равно(20);
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам2")]).Равно(200);
	Ожидаем.Что(НаборыПараметров[0][0].ЭтоПараметрМетода).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура Тест_ПараметрыМетодаИПоляИзАннотаций() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСПараметрамиМетодаИПоля"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(4);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Значение")]).Равно(1);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам")]).Равно(3);
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Значение")]).Равно(1);
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам")]).Равно(4);
	Ожидаем.Что(Результат.Отчет.Таблица[2][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Значение")]).Равно(2);
	Ожидаем.Что(Результат.Отчет.Таблица[2][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам")]).Равно(3);
	Ожидаем.Что(Результат.Отчет.Таблица[3][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Значение")]).Равно(2);
	Ожидаем.Что(Результат.Отчет.Таблица[3][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам")]).Равно(4);

КонецПроцедуры

&Тест
Процедура Тест_УстановкаПараметровМетода() Экспорт
	
	Параметры1 = Новый Массив();
	Параметры1.Добавить(50);
	Параметры1.Добавить(150);

	Параметры2 = Новый Массив();
	Параметры2.Добавить(200);
	Параметры2.Добавить(250);

	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСПараметрамиМетода"));
	Обертка.ПолучитьДескрипторБенчмарка("Бенчмарк")
		.ОчиститьПараметры()
		.ДобавитьПараметры(Параметры1)
		.ДобавитьПараметры(Параметры2);

	Результат = Бенчмаркинг.Запустить(Обертка, ТестированиеБенчмарков.КонфигурацияПоУмолчанию());

	Ожидаем.Что(Результат.Отчет.Таблица).Заполнено();
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам1")]).Равно(50);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам2")]).Равно(150);
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам1")]).Равно(200);
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.ИмяКолонкиПараметр("Парам2")]).Равно(250);
	
КонецПроцедуры

&Тест
Процедура Тест_КатегорииИзАннотации() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиПоКатегориям"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	ИмяКолонки = КолонкиОтчетаБенчмарков.Категория;

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(4);
	Ожидаем.Что(Результат.Отчет.Таблица[0][ИмяКолонки]).Равно("А");
	Ожидаем.Что(Результат.Отчет.Таблица[1][ИмяКолонки]).Равно("А");
	Ожидаем.Что(Результат.Отчет.Таблица[2][ИмяКолонки]).Равно("Б");
	Ожидаем.Что(Результат.Отчет.Таблица[3][ИмяКолонки]).Равно("Б");

КонецПроцедуры

&Тест
Процедура Тест_УстановкаКатегории() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("ПустойБенчмарк"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].УстановитьКатегорию("В");

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(1);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.Категория]).Равно("В");

КонецПроцедуры

&Тест
Процедура Тест_ОпределениеЭталонаПоАннотации() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиСЭталоном"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(2);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.Эталон]).ЭтоЛожь();
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.КоэффициентОтношенияСреднего]).Заполнено();
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.Эталон]).ЭтоИстина();
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.КоэффициентОтношенияСреднего]).Равно(1);

КонецПроцедуры

&Тест
Процедура Тест_УстановкаЭталона() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("ПустойБенчмарк"));
	Конфигурация = Обертка.Конфигурация();
	
	ДескрипторБенчмарка = Обертка.ПолучитьДескрипторБенчмарка("Бенчмарк");
	ДескрипторБенчмарка.ИспользоватьКакЭталон();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(1);
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.Эталон]).ЭтоИстина();
	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.КоэффициентОтношенияСреднего]).Равно(1);

КонецПроцедуры

&Тест
Процедура Тест_ЗапретБолееОдогоЭталона() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиСЭталоном"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].ИспользоватьКакЭталон();
	ДескрипторыБенчмарков[1].ИспользоватьКакЭталон();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	ПараметрыМетода = Новый Массив();
	ПараметрыМетода.Добавить(Обертка);
	ПараметрыМетода.Добавить(Конфигурация);

	Ожидаем
		.Что(Бенчмаркинг)
		.Метод("Запустить", ПараметрыМетода)
		.ВыбрасываетИсключение("Может быть только один эталонный бенчмарк в пределах категории");

КонецПроцедуры

&Тест
Процедура Тест_ЗапретБолееОдогоЭталонаПоКатегории() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиПоКатегориям"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].ИспользоватьКакЭталон(); // А1
	ДескрипторыБенчмарков[1].ИспользоватьКакЭталон(); // А2

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);

	ПараметрыМетода = Новый Массив();
	ПараметрыМетода.Добавить(Обертка);
	ПараметрыМетода.Добавить(Конфигурация);

	Ожидаем
		.Что(Бенчмаркинг)
		.Метод("Запустить", ПараметрыМетода)
		.ВыбрасываетИсключение("Может быть только один эталонный бенчмарк в пределах категории");

КонецПроцедуры

&Тест
Процедура Тест_ОтсутствиеЭталонаКогдаИменаПараметровНеСовпадают() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСЭталономИПараметрами"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);

	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	СтрокаБезЭталона = ПроцессорыКоллекций.ИзКоллекции(Результат.РезультатыЗапусков)
		.Фильтровать("Элемент -> Элемент.ДескрипторБенчмарка.Метод() = ""БенчмаркВ""")
		.ПолучитьПервый();

	Ожидаем.Что(СтрокаБезЭталона.Эталон, "Эталон не должен был быть найден").Не_().Заполнено();

КонецПроцедуры

&Тест
Процедура Тест_ОтсутствиеЭталонаКогдаЗначенияПараметровНеСовпадают() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСЭталономИПараметрами"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);

	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	СтрокаБезЭталона = ПроцессорыКоллекций.ИзКоллекции(Результат.РезультатыЗапусков)
		.Фильтровать("Элемент -> Элемент.ДескрипторБенчмарка.Метод() = ""БенчмаркБ"" И Элемент.Параметры[1].Имя = ""Перем1"" И Элемент.Параметры[1].Значение = 2")
		.ПолучитьПервый();

	Ожидаем.Что(СтрокаБезЭталона, "Не найдена строка бенчмарка ""БенчмаркБ"" со значением параметра 2").Заполнено();
	Ожидаем.Что(СтрокаБезЭталона.Эталон, "Эталон не должен был быть найден").Не_().Заполнено();

КонецПроцедуры

&Тест
Процедура Тест_НаличиеЭталонаКогдаЗначенияПараметровСовпадают() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСЭталономИПараметрами"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);

	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	// БенчмаркБ
	СтрокаБезЭталона = ПроцессорыКоллекций.ИзКоллекции(Результат.РезультатыЗапусков)
		.Фильтровать("Элемент -> Элемент.ДескрипторБенчмарка.Метод() = ""БенчмаркБ"" И Элемент.Параметры[1].Имя = ""Перем1"" И Элемент.Параметры[1].Значение = 1")
		.ПолучитьПервый();

	Ожидаем.Что(СтрокаБезЭталона, "Не найдена строка бенчмарка ""БенчмаркБ"" со значением параметра 1").Заполнено();
	Ожидаем.Что(СтрокаБезЭталона.Эталон, "Эталон должен был быть найден").Заполнено();

КонецПроцедуры

&Тест
Процедура Тест_СортировкаПоМетоду() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиССортировкой"));
	Конфигурация = Обертка.Конфигурация();
	Конфигурация.УстановитьСортировкуОтчета(СортировкиОтчетаБенчмарков.Метод);

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркА");
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркБ");
	Ожидаем.Что(Результат.Отчет.Таблица[2][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркВ");

КонецПроцедуры

&Тест
Процедура Тест_СортировкаОтБыстрыхКМедленнымИзАннотации() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиССортировкой"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркВ");
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркА");
	Ожидаем.Что(Результат.Отчет.Таблица[2][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркБ");

КонецПроцедуры

&Тест
Процедура Тест_СортировкаОтМедленныхКБыстрым() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиССортировкой"));
	Конфигурация = Обертка.Конфигурация();
	Конфигурация.УстановитьСортировкуОтчета(СортировкиОтчетаБенчмарков.ОтМедленныхКБыстрым);

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица[0][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркБ");
	Ожидаем.Что(Результат.Отчет.Таблица[1][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркА");
	Ожидаем.Что(Результат.Отчет.Таблица[2][КолонкиОтчетаБенчмарков.Метод]).Равно("БенчмаркВ");

КонецПроцедуры