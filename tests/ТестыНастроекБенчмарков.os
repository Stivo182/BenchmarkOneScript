// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off

#Использовать asserts
#Использовать "helpers"

&Тест
Процедура Тест_БенчмаркСПараметрамиМетода() Экспорт
	
	Конфигурация = ТестированиеБенчмарков.КонфигурацияПоУмолчанию();
	Результат = Бенчмаркинг.Запустить(Тип("БенчмаркСПараметрамиМетода"), Конфигурация);
	НаборыПараметров = Результат.ДескрипторыБенчмарков[0].НаборыПараметров();

	Ожидаем.Что(Результат.Отчет.Таблица).Заполнено();
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Параметр_Парам1"]).Равно(10);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Параметр_Парам2"]).Равно(100);
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Параметр_Парам1"]).Равно(20);
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Параметр_Парам2"]).Равно(200);
	Ожидаем.Что(НаборыПараметров[0][0].ЭтоПараметрМетода).ЭтоИстина();

КонецПроцедуры

&Тест
Процедура Тест_ПараметрыМетодаДекларативно() Экспорт
	
	Параметры1 = Новый Массив();
	Параметры1.Добавить(50);
	Параметры1.Добавить(150);

	Параметры2 = Новый Массив();
	Параметры2.Добавить(200);
	Параметры2.Добавить(250);

	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСПараметрамиМетода"));
	Обертка.ДескрипторыБенчмарков()[0]
		.ОчиститьПараметры()
		.ДобавитьПараметры(Параметры1)
		.ДобавитьПараметры(Параметры2);

	Результат = Бенчмаркинг.Запустить(Обертка, ТестированиеБенчмарков.КонфигурацияПоУмолчанию());

	Ожидаем.Что(Результат.Отчет.Таблица).Заполнено();
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Параметр_Парам1"]).Равно(50);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Параметр_Парам2"]).Равно(150);
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Параметр_Парам1"]).Равно(200);
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Параметр_Парам2"]).Равно(250);
	
КонецПроцедуры

&Тест
Процедура Тест_БенчмаркСПараметрамиМетодаИПоля() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркСПараметрамиМетодаИПоля"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(4);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Параметр_Значение"]).Равно(1);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Параметр_Парам"]).Равно(3);
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Параметр_Значение"]).Равно(1);
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Параметр_Парам"]).Равно(4);
	Ожидаем.Что(Результат.Отчет.Таблица[2]["Параметр_Значение"]).Равно(2);
	Ожидаем.Что(Результат.Отчет.Таблица[2]["Параметр_Парам"]).Равно(3);
	Ожидаем.Что(Результат.Отчет.Таблица[3]["Параметр_Значение"]).Равно(2);
	Ожидаем.Что(Результат.Отчет.Таблица[3]["Параметр_Парам"]).Равно(4);

КонецПроцедуры

&Тест
Процедура Тест_БенчмаркиСЭталоном() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиСЭталоном"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(2);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Эталон"]).ЭтоЛожь();
	Ожидаем.Что(Результат.Отчет.Таблица[0]["КоэффициентОтношенияСреднего"]).Заполнено();
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Эталон"]).ЭтоИстина();
	Ожидаем.Что(Результат.Отчет.Таблица[1]["КоэффициентОтношенияСреднего"]).Равно(1);

КонецПроцедуры

&Тест
Процедура Тест_ЭталонДекларативно() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("ПустойБенчмарк"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].ИспользоватьКакЭталон();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(1);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Эталон"]).ЭтоИстина();
	Ожидаем.Что(Результат.Отчет.Таблица[0]["КоэффициентОтношенияСреднего"]).Равно(1);

КонецПроцедуры

&Тест
Процедура Тест_БолееОдогоЭталона() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиСЭталоном"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].ИспользоватьКакЭталон();
	ДескрипторыБенчмарков[1].ИспользоватьКакЭталон();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	ПараметрыМетода = Новый Массив();
	ПараметрыМетода.Добавить(Обертка);
	ПараметрыМетода.Добавить(Конфигурация);

	Ожидаем
		.Что(Бенчмаркинг)
		.Метод("Запустить", ПараметрыМетода)
		.ВыбрасываетИсключение("Может быть только один эталонный бенчмарк в пределах категории");

КонецПроцедуры

&Тест
Процедура Тест_БенчмаркиПоКатегориям() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиПоКатегориям"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(4);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Категория"]).Равно("А");
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Категория"]).Равно("А");
	Ожидаем.Что(Результат.Отчет.Таблица[2]["Категория"]).Равно("Б");
	Ожидаем.Что(Результат.Отчет.Таблица[3]["Категория"]).Равно("Б");

КонецПроцедуры

&Тест
Процедура Тест_КатегорияДекларативно() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("ПустойБенчмарк"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].УстановитьКатегорию("В");

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица).ИмеетДлину(1);
	Ожидаем.Что(Результат.Отчет.Таблица[0]["Категория"]).Равно("В");

КонецПроцедуры

&Тест
Процедура Тест_БолееОдогоЭталонаПоКатегории() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиПоКатегориям"));
	Конфигурация = Обертка.Конфигурация();
	ДескрипторыБенчмарков = Обертка.ДескрипторыБенчмарков();

	ДескрипторыБенчмарков[0].ИспользоватьКакЭталон(); // А1
	ДескрипторыБенчмарков[1].ИспользоватьКакЭталон(); // А2

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);

	ПараметрыМетода = Новый Массив();
	ПараметрыМетода.Добавить(Обертка);
	ПараметрыМетода.Добавить(Конфигурация);

	Ожидаем
		.Что(Бенчмаркинг)
		.Метод("Запустить", ПараметрыМетода)
		.ВыбрасываетИсключение("Может быть только один эталонный бенчмарк в пределах категории");

КонецПроцедуры

&Тест
Процедура Тест_СортировкаПоМетоду() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиССортировкой"));
	Конфигурация = Обертка.Конфигурация();
	Конфигурация.УстановитьСортировкуОтчета(СортировкиОтчетаБенчмарков.Метод);

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица[0]["Метод"]).Равно("БенчмаркА");
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Метод"]).Равно("БенчмаркБ");
	Ожидаем.Что(Результат.Отчет.Таблица[2]["Метод"]).Равно("БенчмаркВ");

КонецПроцедуры

&Тест
Процедура Тест_СортировкаОтБыстрыхКМедленнымИзАннотации() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиССортировкой"));
	Конфигурация = Обертка.Конфигурация();

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица[0]["Метод"]).Равно("БенчмаркВ");
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Метод"]).Равно("БенчмаркА");
	Ожидаем.Что(Результат.Отчет.Таблица[2]["Метод"]).Равно("БенчмаркБ");

КонецПроцедуры

&Тест
Процедура Тест_СортировкаОтМедленныхКБыстрым() Экспорт
	
	Обертка = Новый ОберткаОбъектаБенчмарка(Тип("БенчмаркиССортировкой"));
	Конфигурация = Обертка.Конфигурация();
	Конфигурация.УстановитьСортировкуОтчета(СортировкиОтчетаБенчмарков.ОтМедленныхКБыстрым);

	ТестированиеБенчмарков.НастроитьКонфигурациюПодТесты(Конфигурация);
	
	Результат = Бенчмаркинг.Запустить(Обертка, Конфигурация);

	Ожидаем.Что(Результат.Отчет.Таблица[0]["Метод"]).Равно("БенчмаркБ");
	Ожидаем.Что(Результат.Отчет.Таблица[1]["Метод"]).Равно("БенчмаркА");
	Ожидаем.Что(Результат.Отчет.Таблица[2]["Метод"]).Равно("БенчмаркВ");

КонецПроцедуры