// BSLLS:DuplicateStringLiteral-off
// BSLLS:MagicNumber-off

#Использовать asserts
#Использовать "helpers"

&Тест
Процедура Тест_ДолженПроверитьВыделяемуюПамять() Экспорт

	РазмерВБайтах = 1024 * 1024;

	Тип = Тип("БенчмаркБуферДвоичныхДанных");

	ДескрипторыБенчмарков = Новый КоллекцияДескрипторовБенчмарков(Тип);
	ДескрипторБенчмарка = ДескрипторыБенчмарков.НайтиПоИмени("Бенчмарк");
	ДескрипторБенчмарка.ДобавитьПараметры(РазмерВБайтах);
	
	Результат = Бенчмаркинг.Запустить(ДескрипторыБенчмарков);

	ВыделеноБайт = Результат.РезультатыЗапусков[0].Статистика.ВыделяемаяПамять;
	Коэффициент = РазмерВБайтах / ВыделеноБайт;

	Ожидаем.Что(Коэффициент).Между(0.99, 1);

КонецПроцедуры

&Тест
Процедура Тест_ДолженПроверитьВыделяемуюПамятьПустогоБенчмарка() Экспорт

	Тип = Тип("ПустойБенчмарк");

	Конфигурация = Новый КонфигурацияБенчмарков(Тип)
		.ДобавитьМониторингПамяти()
		.УстановитьКоличествоИтераций(5)
		.УстановитьКоличествоПрогревочныхИтераций(1);

	Результат = Бенчмаркинг.Запустить(Тип, Конфигурация);

	ВыделеноБайт = Результат.РезультатыЗапусков[0].Статистика.ВыделяемаяПамять;

	Ожидаем.Что(ВыделеноБайт).Между(1, 600);

КонецПроцедуры

&Тест
Процедура Тест_Производительность() Экспорт

	Результат = Бенчмаркинг.Запустить(Тип("БенчмаркиСЗадержкой"));
	РезультатыЗапусков = Результат.РезультатыЗапусков;
	Отчет = Результат.Отчет;

	Статистика1 = РезультатыЗапусков[0].Статистика.ВМиллисекунды();
	Статистика2 = РезультатыЗапусков[1].Статистика.ВМиллисекунды();

	// Среднее
	Ожидаем.Что(Статистика1.Среднее).Больше(10);
	Ожидаем.Что(Статистика2.Среднее).Больше(20);

	// СтандартноеОтклонение
	Ожидаем.Что(Статистика1.СтандартноеОтклонение).Больше(0);
	Ожидаем.Что(Статистика2.СтандартноеОтклонение).Больше(0);

	// СтандартнаяОшибкаСреднего
	Ожидаем.Что(Статистика1.СтандартнаяОшибкаСреднего).Больше(0);
	Ожидаем.Что(Статистика2.СтандартнаяОшибкаСреднего).Больше(0);

	// Медиана
	Ожидаем.Что(Статистика1.Медиана).Больше(10);
	Ожидаем.Что(Статистика2.Медиана).Больше(20);

	// Эталон
	Ожидаем.Что(Отчет.Таблица[0][КолонкиОтчетаБенчмарков.КоэффициентПроизводительности]).Равно(1);
	Ожидаем.Что(Отчет.Таблица[1][КолонкиОтчетаБенчмарков.КоэффициентПроизводительности]).Больше(1);

КонецПроцедуры

Тест_ДолженПроверитьВыделяемуюПамятьПустогоБенчмарка();