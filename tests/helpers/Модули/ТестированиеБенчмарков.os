#Использовать "../../.."
#Использовать "../../fixtures"

Функция КонфигурацияПоУмолчанию() Экспорт

	Конфигурация = Новый КонфигурацияБенчмарков();
	НастроитьКонфигурациюПодТесты(Конфигурация);

	Возврат Конфигурация;

КонецФункции

Процедура НастроитьКонфигурациюПодТесты(Конфигурация) Экспорт

	МинимальноеВремяИтерации = 10;

	Конфигурация
		.УстановитьКоличествоВызововЗаИтерацию(1)
		.УстановитьКоличествоПрогревочныхИтераций(1)
		.УстановитьКоличествоИтераций(1)
		.УстановитьМинимальноеВремяИтерации(МинимальноеВремяИтерации);

КонецПроцедуры

Процедура ОбработчикПослеКаждого_УстановкаВремени(Контекст) Экспорт

	Задержка = Неопределено;
	Для Каждого Параметр Из Контекст.Параметры Цикл
		Если Параметр.Имя = "Задержка" Тогда
			Задержка = Параметр.Значение;
		КонецЕсли;
	КонецЦикла;

	Если Задержка = Неопределено Тогда
		Задержка = 1;
	КонецЕсли;

	Задержка = Задержка * ЕдиницыИзмеренийБенчмарков.Миллисекунда.ОтношениеКБазовой;

	Для Каждого СтрокаТаблицы Из Контекст.Замеры Цикл
		Если СтрокаТаблицы.Этап = ЭтапыБенчмарка.Измерение Тогда
			СтрокаТаблицы.НаносекундЗаОперацию = Задержка;
			СтрокаТаблицы.Наносекунд = Задержка * СтрокаТаблицы.КоличествоОпераций;
		КонецЕсли;
	КонецЦикла;

	Контекст.Статистика.Прочитать(Контекст.Замеры);

КонецПроцедуры

Процедура ОбработчикПослеВсех_УстановкаМокСредыОкружения(Контекст) Экспорт
	
	Контекст.СредаОкружения.ВерсияБиблиотеки = "v0.1.x-mock";
	Контекст.СредаОкружения.ВерсияОС = "Microsoft Windows NT 10.0.x.mock";
	Контекст.СредаОкружения.ВерсияПлатформы = "2.0.0.0-mock";
	Контекст.СредаОкружения.ИнформацияОПроцессоре.ИмяПроцессора = "MockIntel Core i7-6700HQ CPU 2.60GHz";
	Контекст.СредаОкружения.ИнформацияОПроцессоре.КоличествоПроцессоров = 1;
	Контекст.СредаОкружения.ИнформацияОПроцессоре.КоличествоЯдер = 4;
	Контекст.СредаОкружения.ИнформацияОПроцессоре.КоличествоЛогическихПроцессоров = 8;

	ПостроительОтчета = Новый ПостроительОтчетаБенчмарков(
		Контекст.ДескрипторыБенчмарков,
		Контекст.Конфигурация,
		Контекст.РезультатыЗапусков
	);

	Контекст.Отчет = ПостроительОтчета.Сформировать();

КонецПроцедуры